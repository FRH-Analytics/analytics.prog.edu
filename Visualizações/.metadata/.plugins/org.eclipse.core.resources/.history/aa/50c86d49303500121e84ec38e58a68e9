package uc;

import gui.GraphicUC;
import gui.Menu;
import gui.ScatterPlot;

import java.util.ArrayList;
import java.util.List;

import org.gicentre.utils.stat.XYChart;

import processing.core.PApplet;

public class UC2 implements GraphicUC {
	
	private PApplet parent;
	
	private List<ScatterPlot> scatterPlot;
	private Menu menu;
	
	private List<List<Float>> dadosNotas;
	private List<List<Float>> dadosExercicios;

	public UC2(PApplet p) {
		this.parent = p;
		
		initAll();
	}

	@Override
	public void draw(int click) {
		scatterPlot.get(click).getScatterPlot().draw(10, 160, 1150, 400);
		
		parent.noStroke();
		parent.fill(240);
		parent.rect(345,145,555,110);
		parent.rect(580,145,775,110);
		parent.rect(815,145,1025,110);
		parent.fill(250);
		parent.rect(345,140,550,110);
		parent.rect(580,140,770,110);
		parent.rect(815,140,1020,110);

		parent.fill(130);
		parent.text("Prova 1",420,130);
		parent.text("Prova 2",655,130);
		parent.text("Prova 3",890,130);
		
		parent.text("Visualização da Prova " + (click + 1), 100, 130);
		parent.text("Valor da correlação em relação à Prova " + (click + 1), 100, 560);
	}
	
	private String[][] loadCSV(String filename){
		String lines[] = parent.loadStrings(filename);
		String [][] csv;
		int csvWidth=0;

		//calculate max width of csv file
		for (int i=0; i < lines.length; i++) {
		  String [] chars = PApplet.split(lines[i],',');
		  if (chars.length>csvWidth){
		    csvWidth=chars.length;
		  }
		}

		//create csv array based on # of rows and columns in csv file
		csv = new String [lines.length][csvWidth];

		//parse values into 2d array
		for (int i=0; i < lines.length; i++) {
		  String [] temp = new String [lines.length];
		  temp = PApplet.split(lines[i], ',');
		  for (int j=0; j < temp.length; j++){
		   csv[i][j]=temp[j];
		  }
		}
		
		return csv;
	}
	
	private void loadData() {
		dadosNotas = new ArrayList<List<Float>>();
		dadosNotas.add(new ArrayList<Float>());
		dadosNotas.add(new ArrayList<Float>());
		dadosNotas.add(new ArrayList<Float>());
		
		dadosExercicios = new ArrayList<List<Float>>();
		dadosExercicios.add(new ArrayList<Float>());
		dadosExercicios.add(new ArrayList<Float>());
		dadosExercicios.add(new ArrayList<Float>());
		
		String lines[][] = loadCSV("UC2-Prova1.csv");
		
		for (int i = 1; i < lines.length; i++) {
			int length = lines[i].length;
			float[] tmp = new float[length];
			
			for (int j = 0; j < length; j++)
				tmp[j] = Float.valueOf(lines[i][j].trim());
			
			dadosNotas.get(0).add(tmp[0]);
			dadosExercicios.get(0).add(tmp[1]);
		}
		
		lines = loadCSV("UC2-Prova2.csv");
		
		for (int i = 1; i < lines.length; i++) {
			int length = lines[i].length;
			float[] tmp = new float[length];
			
			for (int j = 0; j < length; j++)
				tmp[j] = Float.valueOf(lines[i][j].trim());
			
			dadosNotas.get(1).add(tmp[0]);
			dadosExercicios.get(1).add(tmp[1]);
		}
		
		lines = loadCSV("UC2-Prova3.csv");
		
		for (int i = 1; i < lines.length; i++) {
			int length = lines[i].length;
			float[] tmp = new float[length];
			
			for (int j = 0; j < length; j++)
				tmp[j] = Float.valueOf(lines[i][j].trim());
			
			dadosNotas.get(2).add(tmp[0]);
			dadosExercicios.get(2).add(tmp[1]);
		}
	}
	
	private float[] toFloat(List<Float> list) {
		float[] tmp = new float[list.size()];
		
		for (int i = 0; i < list.size(); i++)
			tmp[i] = list.get(i);
		
		return tmp;
	}
	
	
	private float max(List<Float> lista) {
		float max = lista.get(0);
		
		for (Float float1 : lista)
			if (float1 > max)
				max = float1;
		
		return max;
	}
	
	private ScatterPlot loadScatterPlot(List<Float> notas, List<Float> qtdQuestoes) {
		XYChart plot = new XYChart(parent);
		plot.setData(toFloat(qtdQuestoes), toFloat(notas));
		
		plot.showXAxis(true);
		plot.showYAxis(true);
		
		plot.setMinX(0);
		plot.setMinY(0);
		
		plot.setMaxX(max(qtdQuestoes));
		plot.setMaxY(10);
		
		plot.setPointSize(5);
		
		plot.setXAxisLabel("Quantidade de Exercícios Enviados");
		plot.setYAxisLabel("Nota na Prova");
		
		return new ScatterPlot(plot);
	}
	
	private int[] toInt(List<Integer> list) {
		int[] tmp = new int[list.size()];
		
		for (int i = 0; i < list.size(); i++)
			tmp[i] = list.get(i);
		
		return tmp;
	}
	
	private void initAll() {
		loadData();
		
		scatterPlot = new ArrayList<ScatterPlot>();
		scatterPlot.add(loadScatterPlot(dadosNotas.get(0), dadosExercicios.get(0)));
		scatterPlot.add(loadScatterPlot(dadosNotas.get(1), dadosExercicios.get(1)));
		scatterPlot.add(loadScatterPlot(dadosNotas.get(2), dadosExercicios.get(2)));
		
		menu = new Menu(new String[] {"Prova 1", "Prova 2", "Prova 3"}, 600, 10, 150, 30, parent);
	}
	
	private float[] toFloatArray(List<Float> list) {
		float[] array = new float[list.size()];
		
		for (int i = 0; i < list.size(); i++)
			array[i] = list.get(i);
		
		return array;
	}
	
	private float maxNumber(float[] array) {
		float max = array[0];
		
		for (int i = 0; i < array.length; i++)
			if (array[i] >= max)
				max = array[i];
		
		return max;
	}
}
